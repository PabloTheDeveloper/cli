package cli

type tokenIterator struct {
	tokens []string
	pos    int
}

func (ti tokenIterator) current() string {
	return ti.tokens[ti.pos]
}
func (ti *tokenIterator) advance() {
	if ti.pos < len(ti.tokens)-1 {
		ti.pos++
	}
}
func (ti *tokenIterator) retreat() {
	if ti.pos > 0 {
		ti.pos--
	}
}

// CmdExp ...
type CmdExp struct {
	name    string
	flags   []FlagExp
	subCmds []CmdExp
}

func (ce *CmdExp) Parse(ti *tokenIterator) error {
	return nil
}
func (ce *CmdExp) GetFlags() error {
	return nil
}

func (ce *CmdExp) GetSubCmds() error {
	return nil
}

// FlagExp ...
type FlagExp struct {
	name string
}

// Cmd ...
type Cmd struct {
	subCmd *Cmd
}

// Flag ...
type Flag struct {
}

/*
	CmdExp {
		"formly",
		flags: []FlagExp {
			"-v"
		}
	}
*/
